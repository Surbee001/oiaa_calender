import jsPDF from 'jspdf'
import { CalendarEvent, EVENT_TYPES } from '@/types'
import { format, parseISO } from 'date-fns'

export function exportToPDF(events: CalendarEvent[], title: string = 'OIAA Calendar') {
  const pdf = new jsPDF()
  let yPosition = 20

  // Title
  pdf.setFontSize(20)
  pdf.setFont('helvetica', 'bold')
  pdf.text('OIAA Strategic Operations Playbook', 20, yPosition)
  yPosition += 10
  
  pdf.setFontSize(14)
  pdf.setFont('helvetica', 'normal')
  pdf.text('Academic Year 2025-2026', 20, yPosition)
  yPosition += 20

  // Legend
  pdf.setFontSize(12)
  pdf.setFont('helvetica', 'bold')
  pdf.text('Legend:', 20, yPosition)
  yPosition += 10

  const legendColors = {
    inbound: [74, 222, 128],    // green
    outbound: [59, 130, 246],   // blue
    event: [168, 85, 247],      // purple
    studytour: [6, 182, 212],   // cyan
    university: [107, 114, 128], // gray
    holiday: [239, 68, 68]      // red
  }

  Object.entries(EVENT_TYPES).forEach(([type, config], index) => {
    const xPos = 20 + (index % 2) * 90
    const yPos = yPosition + Math.floor(index / 2) * 8
    
    // Color box
    const color = legendColors[type as keyof typeof legendColors]
    pdf.setFillColor(color[0], color[1], color[2])
    pdf.rect(xPos, yPos - 3, 5, 5, 'F')
    
    // Label
    pdf.setFont('helvetica', 'normal')
    pdf.setFontSize(10)
    pdf.text(config.label, xPos + 8, yPos)
  })

  yPosition += 30

  // Sort events by date
  const sortedEvents = [...events].sort((a, b) => 
    new Date(a.date).getTime() - new Date(b.date).getTime()
  )

  // Group events by month
  const eventsByMonth = sortedEvents.reduce((acc, event) => {
    const month = format(parseISO(event.date), 'MMMM yyyy')
    if (!acc[month]) acc[month] = []
    acc[month].push(event)
    return acc
  }, {} as Record<string, CalendarEvent[]>)

  // Render events
  Object.entries(eventsByMonth).forEach(([month, monthEvents]) => {
    // Check if we need a new page
    if (yPosition > 250) {
      pdf.addPage()
      yPosition = 20
    }

    // Month header
    pdf.setFontSize(16)
    pdf.setFont('helvetica', 'bold')
    pdf.text(month, 20, yPosition)
    yPosition += 15

    monthEvents.forEach(event => {
      // Check if we need a new page for this event
      const eventHeight = 25 + (event.actionItems?.length || 0) * 6
      if (yPosition + eventHeight > 280) {
        pdf.addPage()
        yPosition = 20
      }

      // Event date
      const eventDate = format(parseISO(event.date), 'MMM dd')
      const endDate = event.endDate ? ` - ${format(parseISO(event.endDate), 'MMM dd')}` : ''
      
      pdf.setFontSize(12)
      pdf.setFont('helvetica', 'bold')
      pdf.text(`${eventDate}${endDate}`, 20, yPosition)
      
      // Event type indicator
      const color = legendColors[event.type as keyof typeof legendColors]
      pdf.setFillColor(color[0], color[1], color[2])
      pdf.rect(15, yPosition - 5, 3, 8, 'F')
      
      yPosition += 8

      // Event title
      pdf.setFontSize(11)
      pdf.setFont('helvetica', 'bold')
      const titleLines = pdf.splitTextToSize(event.title, 170)
      pdf.text(titleLines, 20, yPosition)
      yPosition += titleLines.length * 6

      // Event description
      if (event.description) {
        pdf.setFont('helvetica', 'normal')
        pdf.setFontSize(10)
        const descLines = pdf.splitTextToSize(event.description, 170)
        pdf.text(descLines, 20, yPosition)
        yPosition += descLines.length * 5
      }

      // Action items
      if (event.actionItems && event.actionItems.length > 0) {
        yPosition += 3
        pdf.setFont('helvetica', 'bold')
        pdf.setFontSize(10)
        pdf.text('Action Items:', 20, yPosition)
        yPosition += 5

        event.actionItems.forEach(item => {
          pdf.setFont('helvetica', 'normal')
          pdf.text(`â€¢ ${item}`, 25, yPosition)
          yPosition += 5
        })
      }

      yPosition += 8
    })

    yPosition += 5
  })

  // Footer
  const pageCount = pdf.getNumberOfPages()
  for (let i = 1; i <= pageCount; i++) {
    pdf.setPage(i)
    pdf.setFontSize(8)
    pdf.setFont('helvetica', 'normal')
    pdf.text(`Page ${i} of ${pageCount}`, 20, 285)
    pdf.text('Generated by OIAA Calendar System', 150, 285)
  }

  // Save the PDF
  const filename = `OIAA_Calendar_${format(new Date(), 'yyyy-MM-dd')}.pdf`
  pdf.save(filename)
}